import org.gradle.api.file.Directory
import org.gradle.api.tasks.Delete

// Configuração do Buildscript para plugins
buildscript {
    repositories {
        google()
        mavenCentral()
    }
}

// Configuração dos plugins do projeto
plugins {
    id("com.android.application") apply false
    id("kotlin-android") apply false
    id("dev.flutter.flutter-gradle-plugin") apply false
}

// Configuração para todos os subprojetos
allprojects {
    repositories {
        google()
        mavenCentral()
        // Adicionar o repositório Maven do Flutter para encontrar os artefatos do Flutter
        maven { url = uri("$flutterRoot/build/host/outputs/repo") }
        maven { url 'https://storage.googleapis.com/download.flutter.io' }
    }
}

// Redefinindo o diretório de build para que o cache seja compartilhado
val newBuildDir: Directory = rootProject.layout.buildDirectory.dir("../../build").get()
rootProject.layout.buildDirectory.value(newBuildDir)

subprojects {
    val newSubprojectBuildDir: Directory = newBuildDir.dir(project.name)
    project.layout.buildDirectory.value(newSubprojectBuildDir)
}

// Garante que o projeto 'app' seja avaliado primeiro
subprojects {
    project.evaluationDependsOn(":app")
}

// Tarefa para limpar o diretório de build
tasks.register<Delete>("clean") {
    delete(rootProject.layout.buildDirectory)
}
